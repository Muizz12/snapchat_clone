{"version":3,"sources":["features/CameraSlice.js","Components/WebcamCapture.js","Firebase.js","features/appSlice.js","Components/Preview.js","Components/Chat.js","Components/Sendpost.js","Components/Open.js","Components/Login.js","App.js","app/store.js","index.js"],"names":["CameraSlice","createSlice","name","initialState","cameraImage","reducers","setCameraImage","state","action","payload","resetCameraImage","actions","selectCameraImage","camera","videoConstraints","width","height","facingMode","WebcamCapture","webcamRef","useRef","dispatch","useDispatch","history","useHistory","capture","useCallback","imageSrc","current","getScreenshot","push","className","audio","ref","screenshotFormat","onClick","fontSize","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","appSlice","user","selectedImage","login","Logout","selectImage","resetImage","selectUser","app","selectSelectedImage","Preview","useSelector","useEffect","replace","src","alt","id","uuidv4","putString","on","error","console","log","child","getDownloadURL","then","url","collection","add","imageUrl","username","Profilepic","read","timestamp","FieldValue","serverTimestamp","Chat","doc","set","merge","Avatar","date","Date","toDate","toUTCString","Sendpost","useState","post","setpost","orderBy","onSnapshot","snapshot","docs","map","data","signOut","placeholder","type","Open","exit","isPlaying","duration","strokeWidth","size","colors","remainingTime","Login","Button","varient","signInWithPopup","result","displayName","photoURL","uid","catch","alert","App","onAuthStateChanged","exact","path","store","configureStore","reducer","appReducer","camerReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a8361fe.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nexport const CameraSlice = createSlice({\r\n    name: 'camera',\r\n    initialState: {\r\n        cameraImage: null,\r\n    },\r\n    reducers: {\r\n\r\n        setCameraImage: (state, action) => {\r\n            state.cameraImage = action.payload;\r\n        },\r\n        resetCameraImage: (state) => {\r\n            state.cameraImage = null\r\n        },\r\n    },\r\n\r\n});\r\nexport const { setCameraImage, resetCameraImage } = CameraSlice.actions;\r\nexport const selectCameraImage = (state) => state.camera.cameraImage;\r\nexport default CameraSlice.reducer;\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport Webcam from 'react-webcam'\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport './WebcamCapture.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCameraImage } from '../features/CameraSlice';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst videoConstraints = {\r\n    width: 250,\r\n    height: 400,\r\n    facingMode: 'user',\r\n};\r\n\r\n\r\nfunction WebcamCapture() {\r\n    const webcamRef = useRef(null)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    // const [image, setImage] = useState('')\r\n    const capture = useCallback(() => {\r\n        const imageSrc = webcamRef.current.getScreenshot()\r\n        dispatch(setCameraImage(imageSrc));\r\n        history.push('/Preview')\r\n\r\n        // setImage(imageSrc)\r\n    }, [webcamRef])\r\n    return (\r\n        <div className='webcamCapture'>\r\n            <Webcam\r\n                audio={false}\r\n                height={videoConstraints.height}\r\n                ref={webcamRef}\r\n                screenshotFormat='image/jpeg'\r\n                width={videoConstraints.width}\r\n                videoConstraints={videoConstraints}\r\n\r\n            />\r\n            <RadioButtonUncheckedIcon className='webcamCapture__button'\r\n                onClick={capture}\r\n                fontSize='large'\r\n            />\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebcamCapture\r\n","import firebase from 'firebase'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA9L7J427hP0jbpaZ1g8PLpb3kacSjrX00\",\r\n    authDomain: \"snapchat-clone-365f0.firebaseapp.com\",\r\n    projectId: \"snapchat-clone-365f0\",\r\n    storageBucket: \"snapchat-clone-365f0.appspot.com\",\r\n    messagingSenderId: \"181334907472\",\r\n    appId: \"1:181334907472:web:8896e21427b99ab46d4f55\",\r\n    measurementId: \"G-HHZV5TGW0V\"\r\n};\r\nconst firebaseapp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseapp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, storage, provider }","import { createSlice } from '@reduxjs/toolkit';\nexport const appSlice = createSlice({\n    name: 'app',\n    initialState: {\n        user: null,\n        selectedImage: null,\n    },\n    reducers: {\n\n        login: (state, action) => {\n            state.user = action.payload;\n        },\n        Logout: (state) => {\n            state.user = null;\n        },\n        selectImage: (state, action) => {\n            state.selectedImage = action.payload\n        },\n        resetImage: (state) => {\n            state.selectedImage = null\n        }\n\n    },\n\n});\nexport const { login, Logout, selectImage, resetImage } = appSlice.actions;\nexport const selectUser = (state) => state.app.user;\nexport const selectSelectedImage = (state) => state.app.selectedImage;\nexport default appSlice.reducer;\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { resetCameraImage, selectCameraImage } from '../features/CameraSlice'\r\nimport './Preview.css'\r\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport NoteIcon from '@mui/icons-material/Note';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { db, storage } from '../Firebase';\r\nimport firebase from 'firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectUser } from '../features/appSlice';\r\nfunction Preview() {\r\n    const cameraImage = useSelector(selectCameraImage)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(selectUser)\r\n    const SendPost = () => {\r\n        const id = uuidv4();\r\n        const uploadTask = storage.ref(`posts/${id}`)\r\n            .putString(cameraImage, \"data_url\");\r\n        uploadTask.on('state_changed', null, (error) => {\r\n            console.log(error);\r\n        }, () => {\r\n            // complete finction\r\n            storage.ref('posts').child(id).getDownloadURL().then((url) => {\r\n                db.collection('posts').add({\r\n                    imageUrl: url,\r\n                    username: user.username,\r\n                    Profilepic: user.Profilepic,\r\n                    read: false,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n                history.push(\"/sendpost\")\r\n\r\n            })\r\n        })\r\n    }\r\n    const closePreview = () => {\r\n        dispatch(resetCameraImage())\r\n        // history.push(\"/\")\r\n    }\r\n    useEffect(() => {\r\n        if (!cameraImage) {\r\n            history.replace(\"/\")\r\n\r\n        }\r\n\r\n    }, [cameraImage, history])\r\n    return (\r\n        <div className='preview'>\r\n            <CloseIcon className='preview__clone' onClick={closePreview} />\r\n            <div className=\"preview__toolbarRight\">\r\n                <TextFieldsIcon />\r\n                <CreateIcon />\r\n                <NoteIcon />\r\n                <MusicNoteIcon />\r\n                <AttachFileIcon />\r\n                <CropIcon />\r\n                <AccessTimeIcon />\r\n\r\n\r\n            </div>\r\n            <img src={cameraImage} alt={cameraImage} />\r\n            <div onClick={SendPost} className=\"preview__footer\">\r\n                <h2>Send Now</h2>\r\n                <SendIcon fontSize='small' className=\"preview__sendIcon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import { Avatar } from '@mui/material'\r\nimport React from 'react'\r\nimport StopIcon from '@mui/icons-material/Stop';\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport './Chat.css'\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectImage } from '../features/appSlice';\r\nimport { db } from '../Firebase';\r\nfunction Chat({ id, Profilepic, imageUrl, username, timestamp, read }) {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const open = () => {\r\n        dispatch(selectImage(imageUrl));\r\n        db.collection('posts').doc(id).set({\r\n            read: true,\r\n        }, { merge: true })\r\n        history.push('/open')\r\n\r\n    }\r\n    return (\r\n        <div onClick={open} className='chat'>\r\n            <Avatar className='chat__avatar' src={Profilepic} />\r\n            <div className=\"chat__info\">\r\n                <h2>{username}</h2>\r\n                <p>{!read && \"Tap to View\"}{\" \"}<TimeAgo date={new Date(timestamp?.toDate()).toUTCString()} /></p>\r\n\r\n\r\n            </div>\r\n            {!read && <StopIcon className=\"chat__readIcon\" />}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import { Avatar } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport './Sendpost.css'\r\nimport { auth, db } from '../Firebase';\r\nimport Chat from './Chat';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/appSlice';\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport { useHistory } from 'react-router';\r\nimport { resetCameraImage } from '../features/CameraSlice';\r\n\r\nfunction Sendpost() {\r\n    const [post, setpost] = useState([]);\r\n    const user = useSelector(selectUser);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => setpost(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }))))\r\n\r\n    }, [])\r\n    const takesnap = () => {\r\n        dispatch(resetCameraImage())\r\n        history.push('/')\r\n\r\n    }\r\n    // console.log('post--->', post);\r\n    return (\r\n        <div className='sendpost'>\r\n            <div className=\"sendposts__header\">\r\n                <Avatar src={user.Profilepic} onClick={() => auth.signOut()} className='sendposts__avatar' />\r\n                <div className=\"sendposts__search\">\r\n                    <SearchIcon />\r\n                    <input placeholder='Friends' type='text' />\r\n\r\n                </div>\r\n                <ChatBubbleIcon className='sendposts__chatIcon' />\r\n            </div>\r\n            <div className=\"sendposts__post\">\r\n                {post.map(({ id, data: { Profilepic, imageUrl, username, timestamp, read } }) => (\r\n                    <Chat\r\n                        Profilepic={Profilepic}\r\n                        key={id}\r\n                        id={id}\r\n\r\n                        username={username}\r\n                        timestamp={timestamp}\r\n                        read={read}\r\n                        imageUrl={imageUrl} />\r\n                ))}\r\n\r\n            </div>\r\n            <RadioButtonUncheckedIcon className='sendposts__button'\r\n                onClick={takesnap}\r\n                fontSize='large'\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sendpost\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { selectSelectedImage } from '../features/appSlice'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport './Open.css'\r\nfunction Open() {\r\n    const selectedImage = useSelector(selectSelectedImage)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        if (!selectedImage) {\r\n            exit();\r\n        }\r\n\r\n    }, [selectedImage])\r\n    const exit = () => {\r\n        history.push(\"/sendpost\")\r\n    }\r\n    return (\r\n        <div className='open'>\r\n            <img src={selectedImage} onClick={exit} alt={selectedImage} />\r\n            <div className=\"open__time\">\r\n                <CountdownCircleTimer\r\n                    isPlaying\r\n                    duration={10}\r\n                    strokeWidth={6}\r\n                    size={50}\r\n                    colors={[\r\n                        ['#004777', 0.33],\r\n                        ['#F7B801', 0.33],\r\n                        ['#A30000', 0.33],\r\n                    ]}\r\n                >\r\n                    {({ remainingTime }) => {\r\n                        if (remainingTime === 0) {\r\n                            exit()\r\n                        }\r\n                        return remainingTime\r\n                    }}\r\n\r\n                </CountdownCircleTimer>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Open\r\n","import { Button } from '@mui/material'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../features/appSlice'\r\nimport { auth, provider } from '../Firebase'\r\nimport './Login.css'\r\nfunction Login() {\r\n    const dispatch = useDispatch()\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then(result => {\r\n                console.log(result);\r\n                dispatch(login({\r\n                    username: result.user.displayName,\r\n                    Profilepic: result.user.photoURL,\r\n                    id: result.user.uid\r\n\r\n                }))\r\n\r\n            }).catch((error) => {\r\n                alert(error)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className=\"login__container\">\r\n                <img src='https://th.bing.com/th/id/R.01d85ad0fb5c80379bf077349345982a?rik=rw%2fHZ%2fXquJ3TYA&pid=ImgRaw&r=0' />\r\n                <Button varient='outline' onClick={signIn}><strong>Sign in</strong></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport WebcamCapture from './Components/WebcamCapture';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Preview from './Components/Preview';\nimport Sendpost from './Components/Sendpost';\nimport Open from './Components/Open';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, Logout, selectUser } from './features/appSlice';\nimport Login from './Components/Login';\nimport { auth } from './Firebase';\n\nfunction App() {\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((result) => {\n      if (result) {\n        console.log(\"rsules\", result);\n        dispatch(login({\n          username: result.displayName,\n          Profilepic: result.photoURL,\n          id: result.uid\n        }))\n      } else {\n        dispatch(Logout())\n      }\n    })\n  }, [])\n  return (\n    <div className=\"app\">\n      <>\n        <img className=\"app_logo\" src='https://th.bing.com/th/id/R.01d85ad0fb5c80379bf077349345982a?rik=rw%2fHZ%2fXquJ3TYA&pid=ImgRaw&r=0' />\n        <Router>\n          {!user ? (\n            <Login />\n          ) : (\n            <div className=\"app__body\" >\n              <div className=\"app__bodybackground\">\n                <Switch>\n                  <Route exact path=\"/\">\n                    <WebcamCapture />\n                  </Route>\n                  <Route exact path='/Preview'>\n                    <Preview />\n                  </Route>\n                  <Route exact path='/sendpost'>\n                    <Sendpost />\n                  </Route>\n                  <Route exact path='/open'>\n                    <Open />\n                  </Route>\n                </Switch>\n\n              </div>\n\n            </div>\n          )}\n\n        </Router>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\nimport camerReducer from '../features/CameraSlice'\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    camera: camerReducer\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}